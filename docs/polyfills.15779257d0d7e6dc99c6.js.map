{"version":3,"sources":["./node_modules/zone.js/fesm2015/zone.js"],"names":["global","performance","mark","name","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Error","Zone","parent","zoneSpec","this","_parent","_name","_properties","properties","_zoneDelegate","_ZoneDelegate","patches","zone","current","_currentZoneFrame","_currentTask","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","key","getZoneWith","fork","callback","source","_callback","intercept","runGuarded","arguments","applyThis","applyArgs","invoke","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","i","length","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","scheduleMicroTask","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","toState","fromState1","fromState2","handleId","toString","Object","prototype","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","nativeScheduleMicroTask","func","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","isPropertyWritable","propertyDesc","writable","get","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","listener","result","errorEvent","message","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","makeResolver","promise","v","resolvePromise","once","wasCalled","wrappedFunction","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","currentTask","scheduleResolveOrReject","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","AggregateError","values","Symbol","iterator","Promise","promises","finished","errors","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","_a","C","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalCallback","context","isCapture","tasks","copyTasks","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","buildEventListenerOptions","passive","capture","assign","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","propertyDescriptorPatch","patchTargets","ignoreErrorProperties","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","eventTargetPatch","EVENT_TARGET","legacyPatch","clear","blockingMethods","s","patchEvent","XMLHttpRequestEventTarget","customElements","patchCustomElements","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","patchXHR","geolocation","fnNames","patchPrototype","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"mappings":"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","file":"polyfills.15779257d0d7e6dc99c6.js","sourcesContent":["'use strict';\n/**\n * @license Angular v14.2.0-next.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            var _a;\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            var _a;\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch (_a) {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"],"sourceRoot":"webpack:///"}